%--------------------------------------------------------------------------
%------------------  Iniciar Calculo de Newton Raphson   ------------------
%--------------------------------------------------------------------------
%------------------  Autores: Sebastian Orellana    -----------------------
%------------------           Ekaterina Cornejo     -----------------------
%--------------------------------------------------------------------------
% Función para calcular la raiz de un polinomio con el algoritmo de Newton
% Raphson a partir de los valores dados
% Inputs:
% x0 - valor inicial del algoritmo
% polinomio - polinomio del cual se busca encontrar la raiz asociada
% iteraciones - maximo numero de iteraciones 
% tol - error a considerar
% Outputs:
% xn - valor aproximado de la raiz del polinomio
% e - error asociado a la raiz obtenida

function [xn, e]= newtonraphson(x0, tol, polinomio, iteraciones)
    %se realiza el calculo de la primera y segunda derivada del polinomio
    dfx = polyder(polinomio); %calcular derivada
    ddfx = polyder(dfx); %calcular segunda derivada
    
    dfx
    ddfx
    
    %en caso de tener una primera derivada igual a 0, no se cumplira con la
    %condicion de unicidad de raiz de Newton Raphson y por lo tanto no es
    %aplicable el metodo
    if dfx==0
        fprintf('\nEl metodo Newton Raphson no es aplicable, dado que la segunda derivada de la funcion es 0');
        xn = -1;
        e = -1;
        return;
    end
    elseif ddfx==0
        fprintf('\nEl metodo Newton Raphson no es aplicable, dado que la segunda derivada de la funcion es 0');
        xn = -1;
        e = -1;
        return;
    end
    
    %En caso contrario se entrega el caso inicial a la funcion recursiva "calcularnewtonrapshon"
    %que entregara la raiz del polinomio obtenida y el error asociado a
    %esta
    fprintf('\nMétodo de Newton Raphson:');
    xn = x0;
    i = 1;% se define una iteracion inicial igual a 1
    e = 10;
    fin = 0;
    
    [xn, e] = calcularnewtonraphson(xn, e, polinomio, dfx, iteraciones, tol, fin, i);
    
end


